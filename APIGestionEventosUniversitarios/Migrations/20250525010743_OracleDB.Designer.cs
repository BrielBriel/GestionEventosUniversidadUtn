// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace GestionEventosUniversitarios.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250525010743_OracleDB")]
    partial class OracleDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EventosUniversitarios.Certificado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("EventoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime?>("FechaEmision")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.HasIndex("ParticipanteId");

                    b.ToTable("Certificado");
                });

            modelBuilder.Entity("EventosUniversitarios.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Lugar")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Titulo")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Evento");
                });

            modelBuilder.Entity("EventosUniversitarios.Inscripcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime?>("FechaInscripcion")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.HasIndex("ParticipanteId");

                    b.ToTable("Inscripcion");
                });

            modelBuilder.Entity("EventosUniversitarios.Pago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FechaPago")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("InscripcionId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("MetodoPago")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<decimal?>("Monto")
                        .HasColumnType("NUMBER(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("InscripcionId")
                        .IsUnique();

                    b.ToTable("Pago");
                });

            modelBuilder.Entity("EventosUniversitarios.Participante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Correo")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nombre")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Telefono")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Participante");
                });

            modelBuilder.Entity("EventosUniversitarios.Ponente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Biografia")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Correo")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nombre")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Ponente");
                });

            modelBuilder.Entity("EventosUniversitarios.Reporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DatosResumen")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime?>("FechaGeneracion")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Tipo")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Reporte");
                });

            modelBuilder.Entity("EventosUniversitarios.Sesion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime?>("FechaHora")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Titulo")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("EventoId");

                    b.ToTable("Sesion");
                });

            modelBuilder.Entity("PonenteSesion", b =>
                {
                    b.Property<int>("PonentesId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("SesionesAsignadasId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("PonentesId", "SesionesAsignadasId");

                    b.HasIndex("SesionesAsignadasId");

                    b.ToTable("PonenteSesion");
                });

            modelBuilder.Entity("EventosUniversitarios.Certificado", b =>
                {
                    b.HasOne("EventosUniversitarios.Evento", "Evento")
                        .WithMany("Certificados")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventosUniversitarios.Participante", "Participante")
                        .WithMany("Certificados")
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("EventosUniversitarios.Inscripcion", b =>
                {
                    b.HasOne("EventosUniversitarios.Evento", "Evento")
                        .WithMany("Inscripciones")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventosUniversitarios.Participante", "Participante")
                        .WithMany("Inscripciones")
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("EventosUniversitarios.Pago", b =>
                {
                    b.HasOne("EventosUniversitarios.Inscripcion", "Inscripcion")
                        .WithOne("Pago")
                        .HasForeignKey("EventosUniversitarios.Pago", "InscripcionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inscripcion");
                });

            modelBuilder.Entity("EventosUniversitarios.Sesion", b =>
                {
                    b.HasOne("EventosUniversitarios.Evento", "Evento")
                        .WithMany("Sesiones")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("PonenteSesion", b =>
                {
                    b.HasOne("EventosUniversitarios.Ponente", null)
                        .WithMany()
                        .HasForeignKey("PonentesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventosUniversitarios.Sesion", null)
                        .WithMany()
                        .HasForeignKey("SesionesAsignadasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EventosUniversitarios.Evento", b =>
                {
                    b.Navigation("Certificados");

                    b.Navigation("Inscripciones");

                    b.Navigation("Sesiones");
                });

            modelBuilder.Entity("EventosUniversitarios.Inscripcion", b =>
                {
                    b.Navigation("Pago");
                });

            modelBuilder.Entity("EventosUniversitarios.Participante", b =>
                {
                    b.Navigation("Certificados");

                    b.Navigation("Inscripciones");
                });
#pragma warning restore 612, 618
        }
    }
}
